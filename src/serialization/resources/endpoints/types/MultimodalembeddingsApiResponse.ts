/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as VoyageAI from "../../../../api/index";
import * as core from "../../../../core";
import { MultimodalembeddingsApiResponseDataItem } from "./MultimodalembeddingsApiResponseDataItem";
import { MultimodalembeddingsApiResponseUsage } from "./MultimodalembeddingsApiResponseUsage";

export const MultimodalembeddingsApiResponse: core.serialization.ObjectSchema<
    serializers.MultimodalembeddingsApiResponse.Raw,
    VoyageAI.MultimodalembeddingsApiResponse
> = core.serialization.object({
    object: core.serialization.string().optional(),
    data: core.serialization.list(MultimodalembeddingsApiResponseDataItem).optional(),
    model: core.serialization.string().optional(),
    usage: MultimodalembeddingsApiResponseUsage.optional(),
});

export declare namespace MultimodalembeddingsApiResponse {
    interface Raw {
        object?: string | null;
        data?: MultimodalembeddingsApiResponseDataItem.Raw[] | null;
        model?: string | null;
        usage?: MultimodalembeddingsApiResponseUsage.Raw | null;
    }
}
