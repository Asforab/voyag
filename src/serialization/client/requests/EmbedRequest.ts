/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as VoyageApi from "../../../api/index";
import * as core from "../../../core";
import { EmbedRequestInput } from "../../types/EmbedRequestInput";
import { EmbedRequestInputType } from "../../types/EmbedRequestInputType";

export const EmbedRequest: core.serialization.Schema<serializers.EmbedRequest.Raw, VoyageApi.EmbedRequest> =
    core.serialization.object({
        input: EmbedRequestInput,
        model: core.serialization.string(),
        inputType: core.serialization.property("input_type", EmbedRequestInputType.optional()),
        truncation: core.serialization.boolean().optional(),
        encodingFormat: core.serialization.property(
            "encoding_format",
            core.serialization.stringLiteral("base64").optional()
        ),
    });

export declare namespace EmbedRequest {
    interface Raw {
        input: EmbedRequestInput.Raw;
        model: string;
        input_type?: EmbedRequestInputType.Raw | null;
        truncation?: boolean | null;
        encoding_format?: "base64" | null;
    }
}
